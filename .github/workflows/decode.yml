name: Decode JavaScript File

on:
  # 当 input.js 变化时自动触发
  push:
    branches: [ main ]
    paths:
      - 'input.js'
  # 手动触发
  workflow_dispatch:
    inputs:
      input_path:
        description: 'Path to input JS (default: input.js)'
        required: false
        default: 'input.js'
      output_path:
        description: 'Path to output JS (default: output.js)'
        required: false
        default: 'output.js'
      debug_prepass:
        description: 'Enable v7 prepass debug logs'
        required: false
        default: 'false'
        type: choice
        options: [ 'false', 'true' ]

jobs:
  decode:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write

    concurrency:
      group: decode-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Resolve paths
        id: paths
        shell: bash
        run: |
          IN="${{ github.event.inputs.input_path || 'input.js' }}"
          OUT="${{ github.event.inputs.output_path || 'output.js' }}"
          echo "in=$IN"  >> "$GITHUB_OUTPUT"
          echo "out=$OUT" >> "$GITHUB_OUTPUT"
          echo "Input:  $IN"
          echo "Output: $OUT"

      - name: Ensure input exists
        shell: bash
        run: |
          test -f "${{ steps.paths.outputs.in }}" || {
            echo "::error::Input file not found: ${{ steps.paths.outputs.in }}"
            exit 1
          }

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node dependencies
        run: npm install

      - name: v7 prepass (best-effort)
        env:
          PREPASS_DEBUG: ${{ github.event.inputs.debug_prepass == 'true' && '1' || '' }}
        shell: bash
        run: |
          echo "PREPASS_DEBUG=${PREPASS_DEBUG}"
          node tools/v7_prepass.mjs -i "${{ steps.paths.outputs.in }}" -o "input.pre.js" \
            || cp "${{ steps.paths.outputs.in }}" "input.pre.js"

      - name: Run decode pipeline
        run: |
          node src/main.js -i "input.pre.js" -o "${{ steps.paths.outputs.out }}"

      - name: Upload decoded output (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: decoded-output
          path: ${{ steps.paths.outputs.out }}
          if-no-files-found: warn
          retention-days: 7

      - name: Commit decoded output to repo
        shell: bash
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name  "action"
          git add "${{ steps.paths.outputs.out }}" || true
          git diff --cached --quiet && echo "no changes" || git commit -m "Add decoded output file"
          git push || true

      - name: Summary
        run: |
          {
            echo "### Decode summary"
            echo ""
            echo "- Input : \`${{ steps.paths.outputs.in }}\`"
            echo "- Output: \`${{ steps.paths.outputs.out }}\`"
          } >> "$GITHUB_STEP_SUMMARY"